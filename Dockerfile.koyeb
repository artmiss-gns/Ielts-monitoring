# Multi-stage build for IELTS Appointment Monitor - Koyeb Optimized
# Stage 1: Build stage
FROM node:20-slim AS builder

# Install build dependencies required for native modules using apt-get
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    make \
    g++ \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./
COPY tsconfig.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --no-audit --no-fund

# Copy source code
COPY src/ ./src/

# Build TypeScript application
RUN npm run build:prod

# ---

# Stage 2: Production runtime
FROM node:20-slim AS runtime

# Install Chromium dependencies and utilities using apt-get
RUN apt-get update && apt-get install -y --no-install-recommends \
    chromium \
    dumb-init \
    curl \
    # Add common libraries needed by Chromium to prevent runtime errors
    libnss3 \
    libatk-bridge2.0-0 \
    libgtk-3-0 \
    libasound2 \
    libxshmfence1 \
    fonts-freefont-ttf \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security using Debian-compatible syntax
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --no-create-home --uid 1001 --ingroup nodejs ielts

# Set working directory
WORKDIR /app

# Copy package files for production dependency installation
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Create runtime directories and set ownership
RUN mkdir -p /app/config /app/logs /app/data && \
    chown -R ielts:nodejs /app

# Bake default config and initial data into the image
COPY --chown=ielts:nodejs config/ ./config/

# Set Puppeteer environment variables for containerized Chrome
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium \
    NODE_ENV=production \
    CHROME_BIN=/usr/bin/chromium \
    CHROME_PATH=/usr/bin/chromium \
    PUPPETEER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-accelerated-2d-canvas,--no-first-run,--no-zygote,--disable-gpu

# Switch to non-root user
USER ielts

# Expose port for your application
EXPOSE 8000

# HEALTHCHECK is left commented out until you confirm the app starts successfully.

# Use dumb-init for proper signal handling (recommended)
ENTRYPOINT ["dumb-init", "--"]

# Default command to run your application
CMD ["node", "dist/index.js", "start"]